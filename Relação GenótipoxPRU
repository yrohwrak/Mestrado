import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# Nomes dos grupos correspondentes a cada conjunto de dados
group_names = ['*1/*1', '*1/*2', '*2/*17', '*1/*17', '*17/*17',]

# Valores para cada grupo
data_values = [
    [57, 69, 98, 102, 105, 106, 107, 112, 131, 159, 159, 163, 165, 167, 181, 194, 219, 229, 252, 258, 280, 324],  # Values for group 3 (*1/*1)
    [58, 60, 75, 128, 137, 157, 173, 258, 280],  # Values for group 1 (*1/*2)
    [293, 312],  # Values for group 5 (*2/*17)
    [38, 68, 68, 79, 109, 115, 178, 185, 186, 187, 221, 247, 262, 294],  # Values for group 4 (*1/*17)
    [200, 119],  # Values for group 2 (*17/*17)
]

# Criando uma lista de categorias correspondente aos dados
categories = []
for group_name, values in zip(group_names, data_values):
    categories.extend([group_name] * len(values))

# Concatenando todos os dados em um único conjunto e criando a variável categórica
data_combined = np.concatenate(data_values)
category_feature = np.array(categories)

# Armazenando os dados em um DataFrame do pandas
df = pd.DataFrame({'variavel_numerica': data_combined, 'variavel_categorica': category_feature})

# Criando a figura do gráfico
fig, ax = plt.subplots(figsize=(12, 6))

# Exibindo cada grupo no gráfico
boxplot_data = []
positions = np.arange(1, len(group_names) + 1)
color_palette = plt.cm.get_cmap('tab10', len(group_names))  # Usando uma paleta de cores

for i, group in enumerate(group_names):
    y = df[df['variavel_categorica'] == group]['variavel_numerica']
    x = np.random.normal(i + 1, 0.04, size=len(y))
    ax.scatter(x, y, alpha=0.8, color=color_palette(i))  # Usando cores indexadas da paleta
    boxplot_data.append(y)

# Adicionando boxplots com interiores totalmente transparentes e medianas destacadas
for i, data in enumerate(boxplot_data):
    if data.size > 0:  # Checa se o grupo possui dados para evitar erros
        ax.boxplot(data, positions=[positions[i]], widths=0.6, patch_artist=True,
                   boxprops=dict(facecolor=(1, 1, 1, 0), edgecolor='black'),
                   medianprops=dict(color='darkblue', linewidth=2))

# Adicionando uma linha horizontal discreta em PRU > 208
ax.axhline(y=208, color='lightgrey', linestyle='--', linewidth=1.5, label='PRU > 208')

# Configurando o intervalo do eixo y de 0 a 400
ax.set_ylim(0, 400)

# Adicionando título e rótulo do eixo y

ax.set_ylabel("Unidades de reação P2Y12 (PRU)", color='black')

# Configurando rótulos personalizados para o eixo x
ax.set_xticks(positions)
ax.set_xticklabels(group_names, rotation=45, ha='right', color='black')

# Ajustando o aspecto do gráfico para 'comprimir' verticalmente
ax.set_aspect(aspect=0.02)

# Ajustando o layout para manter títulos e rótulos visíveis
fig.subplots_adjust(bottom=0.25)  # Ajustando a parte inferior para acomodar rótulos rotacionados

# Exibindo o gráfico
plt.show()
