import matplotlib.pyplot as plt
import numpy as np  # Importando numpy

# Dados dos grupos
grupo_counts = {
    'Normal': 68,
    'Intermediário': 36,
    'Rápido': 36,
    'Ultrarrápido': 6
}
total = sum(grupo_counts.values())  # Total de amostras genotipadas

# Calculando as porcentagens e preparando as etiquetas
sizes = list(grupo_counts.values())
labels = [f"{key}" for key in grupo_counts.keys()]
percentages = [f'{size} ({size/total*100:.1f}%)' for size in sizes]

# Cores em tons pastéis mais vívidos
colors = ['#FFB6C1', '#89CFF0', '#FAE7B5', '#B39EB5', '#FFDFD3']

# Criando o gráfico de rosca (donut plot)
fig, ax = plt.subplots(figsize=(7, 7), subplot_kw=dict(aspect="equal"))

# Adicionando os dados ao gráfico
wedges, texts, autotexts = ax.pie(sizes, labels=labels, autopct='', startangle=140, colors=colors,
                                   wedgeprops={'width': 0.3, 'edgecolor': 'w'})

# Adicionando as porcentagens dentro das fatias
for i, wedge in enumerate(wedges):
    angle = (wedge.theta2 - wedge.theta1)/2. + wedge.theta1
    x = np.cos(np.deg2rad(angle))
    y = np.sin(np.deg2rad(angle))
    ax.text(x*0.7, y*0.7, percentages[i], ha="center", va="center", color="black", fontsize=10)

# Adicionando um círculo no centro para criar o efeito de rosca
centre_circle = plt.Circle((0,0),0.70, color='white')
fig.gca().add_artist(centre_circle)



# Mostra o gráfico
plt.show()
